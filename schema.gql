# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Admin {
  email: String!
  firstName: String!
  id: ID!
  is_active: Boolean!
  is_creator: Boolean!
  lastName: String!
  password: String!
  phone: String!
  refresh_token: String!
}

type Attendance {
  date: DateTime!
  id: ID!
  status: String!
}

type Course {
  desciption: String!
  duration: Float!
  id: ID!
  lessonsInWeek: Float!
  price: Float!
  title: String!
}

input CreateAdminDto {
  confirm_password: String!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phone: String!
}

input CreateAttendanceDto {
  date: DateTime!
  scheduleId: Float!
  status: String!
  studentId: Float!
}

input CreateCourseDto {
  desciption: String!
  duration: Float!
  lessonsInWeek: Float!
  price: Float!
  title: String!
}

input CreateGroupDto {
  courseId: Float!
  endDate: String!
  name: String!
  startDate: String!
  status: String!
}

input CreateStudentDto {
  avatar_url: String!
  confirm_password: String!
  dateOfBirth: DateTime!
  email: String!
  firstName: String!
  gender: String!
  is_active: Boolean!
  lastName: String!
  password: String!
  phone: String!
}

input CreateStudentGroupDto {
  groupId: Float!
  is_active: Boolean!
  period: DateTime!
  studentId: ID!
}

input CreateTeacherDto {
  confirm_password: String!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phone: String!
  role: String!
  subject: String!
}

input CreateTeacherGroupDto {
  groupId: Float!
  teacherId: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Group {
  course: ID!
  endDate: String!
  id: ID!
  name: String!
  startDate: String!
  status: String!
}

type Mutation {
  create(createAdmin: CreateAdminDto!): Admin!
  createAttendance(createAttendance: CreateAttendanceDto!): Attendance!
  createCourse(createCourse: CreateCourseDto!): Course!
  createGroup(createGroup: CreateGroupDto!): Group!
  createStudent(createStudent: CreateStudentDto!): Student!
  createStudentGroup(createStudentGroup: CreateStudentGroupDto!): StudentGroup!
  createTeacher(createUser: CreateTeacherDto!): Teacher!
  createTeacherGroup(createGroup: CreateTeacherGroupDto!): TeacherGroup!
  remove(id: Float!): Float!
  removeAttendance(id: Float!): Attendance!
  removeCourse(id: Float!): Float!
  removeGroup(id: Float!): Float!
  removeStudent(id: Float!): Float!
  removeStudentGroup(id: Float!): StudentGroup!
  removeTeacher(id: ID!): Float!
  removeTeacherGroup(id: Float!): Float!
  updateAdmin(id: ID!, updateAdmin: UpdateAdminDto!): Admin!
  updateAttendance(id: Float!, updateAttendance: UpdateAttendanceDto!): Attendance!
  updateCourse(id: Float!): Course!
  updateGroup(id: Float!, updateGroup: UpdateGroupDto!): Group!
  updateStudent(id: Float!, updateStudent: UpdateStudentDto!): Student!
  updateStudentGroup(id: Float!, updateStudentGroup: UpdateStudentGroupDto!): StudentGroup!
  updateTeacher(id: ID!, updateTeacher: UpdateTeacherDto!): Teacher!
  updateTeacherGroup(id: Float!, updateTeacherGroup: UpdateTeacherGroupDto!): TeacherGroup!
}

type Query {
  findAllAdmins: [Admin!]!
  findAllAttendance: [Attendance!]!
  findAllCourse: [Course!]!
  findAllGroup: [Group!]!
  findAllStudent: [Student!]!
  findAllStudentGroup: [StudentGroup!]!
  findAllTeacher: [Teacher!]!
  findAllTeacherGroups: [TeacherGroup!]!
  findOneAdmin(id: Float!): Admin!
  findOneAttendance(id: Float!): Attendance!
  findOneCourse(id: Float!): Course!
  findOneGroup(id: Float!): Group!
  findOneStudent(id: Float!): Student!
  findOneStudentGroup(id: Float!): StudentGroup!
  findOneTeacher(id: Float!): Teacher!
  findOneTeacherGroup(id: Float!): TeacherGroup!
}

type Student {
  avatar_url: String!
  dateOfBirth: DateTime!
  email: String!
  firstName: String!
  gender: String!
  id: ID!
  is_active: Boolean!
  lastName: String!
  password: String!
  phone: String!
  refresh_token: String!
}

type StudentGroup {
  id: ID!
  is_active: Boolean!
  period: DateTime!
}

type Teacher {
  email: String!
  firstName: String!
  id: ID!
  is_active: Boolean!
  lastName: String!
  password: String!
  phone: String!
  refresh_token: String!
  role: String!
  subject: String!
}

type TeacherGroup {
  id: ID!
}

input UpdateAdminDto {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phone: String!
}

input UpdateAttendanceDto {
  date: DateTime!
  scheduleId: Float!
  status: String!
  studentId: Float!
}

input UpdateGroupDto {
  courseId: Float!
  endDate: String!
  name: String!
  startDate: String!
  status: String!
}

input UpdateStudentDto {
  avatar_url: String!
  confirm_password: String!
  dateOfBirth: DateTime!
  email: String!
  firstName: String!
  gender: String!
  is_active: Boolean!
  lastName: String!
  password: String!
  phone: String!
}

input UpdateStudentGroupDto {
  groupId: Float!
  is_active: Boolean!
  period: DateTime!
  studentId: ID!
}

input UpdateTeacherDto {
  confirm_password: String!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phone: String!
  role: String!
  subject: String!
}

input UpdateTeacherGroupDto {
  groupId: Float!
  teacherId: Float!
}